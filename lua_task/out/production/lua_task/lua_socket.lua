---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/10/23 16:30
---


--local http = require("socket.http")
--result = http.request("http://anhuaxiang.cn")
--print(result)
--print("*****************************************************************************************")

--local socket = require("socket")
--local host = "www.baidu.com"
--local file = "/"
--local sock = assert(socket.connect(host, 80))
--sock:send("GET " .. file .. " HTTP/1.0\r\n\r\n")
--repeat
--    local chunk, status, partial = sock:receive(1024)
--    print(chunk or partial)
--    print("------------------")
--until status ~= "closed"
--sock:close()


--local socket = require("socket")
--local host = "www.w3.org"
--local file = "/TR/REC-html32.html"
--
--local c = assert(socket.connect(host, 80))
--c:send("GET" .. file .. "HTTP/1.0\r\n\r\n")
--repeat
--    local chunk, status, partial = c:receive(1024)
--    print(partial)
--until status == "closed"
--c:close()


local socket = require("socket")
local host = "anhuaxiang.cn"
local threads = {}

function receive(conn)
    conn:timeout(5)
    local s, status = conn:receive(2^10)
    if status == "timeout" then
        coroutine.yield(conn)
    end
    return s, status
end


function download(host, file)
    local conn = assert(socket.connect(host, 80))
    local count = 0
    conn:send("GET" .. file .. "HTTP/1.0\r\n\r\n")
    while true do
        local s, status = receive(conn)
        count = count + 1
        if status == "closed" then
            break
        end
    end
    c:close()
    print(file, count)
end


function get(host, file)
    local co = coroutine.create(function ()
        download(host, file)
    end)
    table.insert(threads, co)
end


function dispatcher()
    while true do
        local n = #threads
        if n == 0 then
            break
        end
        for i=1, n do
            local status, res = coroutine.resume(threads[i])
            if not res then
                table.remove(threads, i)
                break
            end
        end
    end
end


get(host, "article/?id=35")
get(host, "article/?id=33")
get(host, "article/?id=30")
get(host, "article/?id=29")
dispatcher()