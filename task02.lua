---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2018/10/22 13:59
---


local lfs = require("lfs")
local posix = require("posix")


local base_path = "/sys/class/net"


function sleep(n)
    posix.sleep(n)
end


function get_msg_from_file(filename)
    local file = io.open(filename)
    io.input(file)
    return io.read()
end


function listen_net(name, path)
    local address = get_msg_from_file(path .. "/address")
    local carrier = get_msg_from_file(path .. "/carrier")
    local operstate = get_msg_from_file(path .. "/operstate")
    if address ~= table_status[name].address then
        print("address changed --> ", address)
        table_status[name].address = address
    end
    if carrier ~= table_status[name].carrier then
        print("carrier changed --> ", carrier)
        table_status[name].carrier = carrier
    end
    if operstate ~= table_status[name].operstate then
        print("address changed --> ", operstate)
        table_status[name].operstate = operstate
    end
    table_status[name] = {address=address, carrier=carrier, operstate=operstate}
    print(name, table_status[name].address, table_status[name].carrier, table_status[name].operstate)
end


function main()
    local path_list = {}
    table_status = {}
    for path in lfs.dir(base_path) do
        if path ~= "." and path ~= ".." and path ~= "lo" then
            local child_dir = base_path .. "/" .. path
            local attr = lfs.attributes(child_dir)
            assert(type(attr) == "table", "fail")
            if attr.mode == "directory" then
                path_list[path] = child_dir
                table_status[path] = {}
            end
        end
    end
    while true do
        for name, path in pairs(path_list) do
            listen_net(name, path)
        end
        sleep(3)
    end
end

main()
